# Generated by Django 4.0.6 on 2022-08-01 16:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=150)),
                ('postal_code', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Please enter a valid postal code containning 10 numbers', regex='^[0-9]{10}$')], verbose_name='postal code')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
            ],
            options={
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('phonenumber', models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid phone number containing 11 number', regex='^[0-9]+$')], verbose_name='phone number')),
                ('birthdate', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='birth date')),
                ('bodytype', models.IntegerField(blank=True, choices=[(0, 'Athelic'), (1, 'Curvey'), (2, 'Hour glass'), (3, 'Long and Lean'), (4, 'Pear Shaped'), (5, 'Petite'), (6, 'Slender')], null=True, verbose_name='body type')),
                ('height', models.IntegerField(blank=True, choices=[(0, '4\' 6"'), (1, '4\' 7"'), (2, '4\' 8"'), (3, '4\' 9"'), (4, '4\' 10"'), (5, '5\' 0"'), (6, '5\' 1"'), (7, '5\' 2"'), (8, '5\' 3"'), (9, '5\' 4"'), (10, '5\' 5"'), (11, '5\' 6"'), (12, '5\' 7"'), (13, '5\' 8"'), (14, '5\' 9"'), (15, '5\' 10"'), (16, '6\' 0"'), (17, '6\' 1"'), (18, '6\' 2"'), (19, '6\' 3"'), (20, '6\' 4"'), (21, '6\' 5"'), (22, '6\' 6"'), (23, '6\' 7"'), (24, '6\' 8"'), (25, '6\' 9"'), (26, '6\' 10"')], help_text='select your height in feet', null=True, verbose_name='height')),
                ('weight', models.IntegerField(blank=True, help_text='enter your weight in kg', null=True, verbose_name='weight')),
                ('address', models.ManyToManyField(blank=True, to='CustomUser.address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'ordering': ['date_joined', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='CustomUser.province')),
            ],
            options={
                'verbose_name_plural': 'cities',
            },
        ),
        migrations.AddField(
            model_name='address',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CustomUser.city'),
        ),
    ]
